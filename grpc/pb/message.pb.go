// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	message.proto
	router.proto

It has these top-level messages:
	SSMessage
	SSRouter
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SSMessage_MessageType int32

const (
	SSMessage_UNKNOWN    SSMessage_MessageType = 0
	SSMessage_REQUEST    SSMessage_MessageType = 1
	SSMessage_RESPONSE   SSMessage_MessageType = 2
	SSMessage_NOTIFY     SSMessage_MessageType = 3
	SSMessage_BROADCAST  SSMessage_MessageType = 4
	SSMessage_SERVERSELF SSMessage_MessageType = 5
)

var SSMessage_MessageType_name = map[int32]string{
	0: "UNKNOWN",
	1: "REQUEST",
	2: "RESPONSE",
	3: "NOTIFY",
	4: "BROADCAST",
	5: "SERVERSELF",
}
var SSMessage_MessageType_value = map[string]int32{
	"UNKNOWN":    0,
	"REQUEST":    1,
	"RESPONSE":   2,
	"NOTIFY":     3,
	"BROADCAST":  4,
	"SERVERSELF": 5,
}

func (x SSMessage_MessageType) String() string {
	return proto.EnumName(SSMessage_MessageType_name, int32(x))
}
func (SSMessage_MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

// SSMessage Server Message结构
type SSMessage struct {
	SessionID string                `protobuf:"bytes,1,opt,name=sessionID" json:"sessionID,omitempty"`
	SrcSID    int32                 `protobuf:"varint,2,opt,name=srcSID" json:"srcSID,omitempty"`
	SrcType   int32                 `protobuf:"varint,3,opt,name=srcType" json:"srcType,omitempty"`
	DestSID   int32                 `protobuf:"varint,4,opt,name=destSID" json:"destSID,omitempty"`
	DestType  int32                 `protobuf:"varint,5,opt,name=destType" json:"destType,omitempty"`
	SeqID     int32                 `protobuf:"varint,6,opt,name=seqID" json:"seqID,omitempty"`
	MessageID int32                 `protobuf:"varint,7,opt,name=messageID" json:"messageID,omitempty"`
	MsgType   SSMessage_MessageType `protobuf:"varint,8,opt,name=msgType,enum=pb.SSMessage_MessageType" json:"msgType,omitempty"`
	TransID   string                `protobuf:"bytes,9,opt,name=transID" json:"transID,omitempty"`
	Uid       int64                 `protobuf:"varint,10,opt,name=uid" json:"uid,omitempty"`
	Body      []byte                `protobuf:"bytes,11,opt,name=body,proto3" json:"body,omitempty"`
}

func (m *SSMessage) Reset()                    { *m = SSMessage{} }
func (m *SSMessage) String() string            { return proto.CompactTextString(m) }
func (*SSMessage) ProtoMessage()               {}
func (*SSMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SSMessage) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *SSMessage) GetSrcSID() int32 {
	if m != nil {
		return m.SrcSID
	}
	return 0
}

func (m *SSMessage) GetSrcType() int32 {
	if m != nil {
		return m.SrcType
	}
	return 0
}

func (m *SSMessage) GetDestSID() int32 {
	if m != nil {
		return m.DestSID
	}
	return 0
}

func (m *SSMessage) GetDestType() int32 {
	if m != nil {
		return m.DestType
	}
	return 0
}

func (m *SSMessage) GetSeqID() int32 {
	if m != nil {
		return m.SeqID
	}
	return 0
}

func (m *SSMessage) GetMessageID() int32 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *SSMessage) GetMsgType() SSMessage_MessageType {
	if m != nil {
		return m.MsgType
	}
	return SSMessage_UNKNOWN
}

func (m *SSMessage) GetTransID() string {
	if m != nil {
		return m.TransID
	}
	return ""
}

func (m *SSMessage) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *SSMessage) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func init() {
	proto.RegisterType((*SSMessage)(nil), "pb.SSMessage")
	proto.RegisterEnum("pb.SSMessage_MessageType", SSMessage_MessageType_name, SSMessage_MessageType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Message service

type MessageClient interface {
	// 定义Request方法
	Request(ctx context.Context, opts ...grpc.CallOption) (Message_RequestClient, error)
}

type messageClient struct {
	cc *grpc.ClientConn
}

func NewMessageClient(cc *grpc.ClientConn) MessageClient {
	return &messageClient{cc}
}

func (c *messageClient) Request(ctx context.Context, opts ...grpc.CallOption) (Message_RequestClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Message_serviceDesc.Streams[0], c.cc, "/pb.Message/Request", opts...)
	if err != nil {
		return nil, err
	}
	x := &messageRequestClient{stream}
	return x, nil
}

type Message_RequestClient interface {
	Send(*SSMessage) error
	Recv() (*SSMessage, error)
	grpc.ClientStream
}

type messageRequestClient struct {
	grpc.ClientStream
}

func (x *messageRequestClient) Send(m *SSMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *messageRequestClient) Recv() (*SSMessage, error) {
	m := new(SSMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Message service

type MessageServer interface {
	// 定义Request方法
	Request(Message_RequestServer) error
}

func RegisterMessageServer(s *grpc.Server, srv MessageServer) {
	s.RegisterService(&_Message_serviceDesc, srv)
}

func _Message_Request_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MessageServer).Request(&messageRequestServer{stream})
}

type Message_RequestServer interface {
	Send(*SSMessage) error
	Recv() (*SSMessage, error)
	grpc.ServerStream
}

type messageRequestServer struct {
	grpc.ServerStream
}

func (x *messageRequestServer) Send(m *SSMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *messageRequestServer) Recv() (*SSMessage, error) {
	m := new(SSMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Message_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Message",
	HandlerType: (*MessageServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Request",
			Handler:       _Message_Request_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "message.proto",
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x4f, 0xaf, 0xd2, 0x40,
	0x10, 0xc0, 0xdf, 0xf6, 0x2f, 0x1d, 0x1e, 0x2f, 0xcd, 0xc4, 0x98, 0x95, 0x78, 0x68, 0x38, 0xf5,
	0x62, 0x63, 0xe0, 0xe2, 0x15, 0x6c, 0x49, 0x1a, 0xb5, 0xd5, 0xdd, 0xa2, 0xd1, 0x93, 0x14, 0x36,
	0x84, 0x03, 0xb4, 0x74, 0xcb, 0x81, 0xef, 0xe2, 0x87, 0x35, 0xbb, 0xb4, 0xf0, 0x38, 0xed, 0xfc,
	0xe6, 0xb7, 0x33, 0x99, 0xc9, 0xc0, 0xe8, 0x20, 0xa4, 0x5c, 0xef, 0x44, 0x54, 0x37, 0x55, 0x5b,
	0xa1, 0x51, 0x97, 0x93, 0x7f, 0x26, 0x78, 0x9c, 0x7f, 0xbb, 0xe6, 0xf1, 0x3d, 0x78, 0x52, 0x48,
	0xb9, 0xaf, 0x8e, 0x69, 0x4c, 0x49, 0x40, 0x42, 0x8f, 0xdd, 0x13, 0xf8, 0x16, 0x1c, 0xd9, 0x6c,
	0x78, 0x1a, 0x53, 0x23, 0x20, 0xa1, 0xcd, 0x3a, 0x42, 0x0a, 0xae, 0x6c, 0x36, 0xc5, 0xa5, 0x16,
	0xd4, 0xd4, 0xa2, 0x47, 0x65, 0xb6, 0x42, 0xb6, 0xaa, 0xc4, 0xba, 0x9a, 0x0e, 0x71, 0x0c, 0x03,
	0x15, 0xea, 0x22, 0x5b, 0xab, 0x1b, 0xe3, 0x1b, 0xb0, 0xa5, 0x38, 0xa5, 0x31, 0x75, 0xb4, 0xb8,
	0x82, 0x9a, 0xad, 0x1b, 0x3f, 0x8d, 0xa9, 0xab, 0xcd, 0x3d, 0x81, 0x33, 0x70, 0x0f, 0x72, 0xa7,
	0xdb, 0x0d, 0x02, 0x12, 0xbe, 0x4c, 0xdf, 0x45, 0x75, 0x19, 0xdd, 0x36, 0x8b, 0xba, 0x57, 0x7d,
	0x60, 0xfd, 0x4f, 0x35, 0x5e, 0xdb, 0xac, 0x8f, 0x32, 0x8d, 0xa9, 0xa7, 0x97, 0xed, 0x11, 0x7d,
	0x30, 0xcf, 0xfb, 0x2d, 0x85, 0x80, 0x84, 0x26, 0x53, 0x21, 0x22, 0x58, 0x65, 0xb5, 0xbd, 0xd0,
	0x61, 0x40, 0xc2, 0x67, 0xa6, 0xe3, 0xc9, 0x5f, 0x18, 0xbe, 0xea, 0x8b, 0x43, 0x70, 0x57, 0xd9,
	0x97, 0x2c, 0xff, 0x95, 0xf9, 0x4f, 0x0a, 0x58, 0xf2, 0x63, 0x95, 0xf0, 0xc2, 0x27, 0xf8, 0x0c,
	0x03, 0x96, 0xf0, 0xef, 0x79, 0xc6, 0x13, 0xdf, 0x40, 0x00, 0x27, 0xcb, 0x8b, 0x74, 0xf9, 0xdb,
	0x37, 0x71, 0x04, 0xde, 0x82, 0xe5, 0xf3, 0xf8, 0xf3, 0x9c, 0x17, 0xbe, 0x85, 0x2f, 0x00, 0x3c,
	0x61, 0x3f, 0x13, 0xc6, 0x93, 0xaf, 0x4b, 0xdf, 0x9e, 0x7e, 0x02, 0xb7, 0xbf, 0xcd, 0x07, 0x70,
	0x99, 0x38, 0x9d, 0x85, 0x6c, 0x71, 0xf4, 0xb0, 0xdb, 0xf8, 0x11, 0x27, 0x4f, 0x21, 0xf9, 0x48,
	0x16, 0xd6, 0x1f, 0xa3, 0x2e, 0x4b, 0x47, 0x5f, 0x7a, 0xf6, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x77,
	0x2c, 0xa4, 0xcb, 0xfa, 0x01, 0x00, 0x00,
}
