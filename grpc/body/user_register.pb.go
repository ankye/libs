// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_register.proto

package body

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UserRegister_TransferType int32

const (
	UserRegister_USERLOGINTYPEACCOUNT UserRegister_TransferType = 0
	UserRegister_USERLOGINTYPEPHONE   UserRegister_TransferType = 1
	UserRegister_USERLOGINTYPEQQ      UserRegister_TransferType = 2
	UserRegister_USERLOGINTYPEWX      UserRegister_TransferType = 3
)

var UserRegister_TransferType_name = map[int32]string{
	0: "USERLOGINTYPEACCOUNT",
	1: "USERLOGINTYPEPHONE",
	2: "USERLOGINTYPEQQ",
	3: "USERLOGINTYPEWX",
}
var UserRegister_TransferType_value = map[string]int32{
	"USERLOGINTYPEACCOUNT": 0,
	"USERLOGINTYPEPHONE":   1,
	"USERLOGINTYPEQQ":      2,
	"USERLOGINTYPEWX":      3,
}

func (x UserRegister_TransferType) String() string {
	return proto.EnumName(UserRegister_TransferType_name, int32(x))
}
func (UserRegister_TransferType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

// UserRegister Server Message结构
type UserRegister struct {
	Account   string `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Uid       int64  `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	Phone     string `protobuf:"bytes,3,opt,name=phone" json:"phone,omitempty"`
	LoginType int32  `protobuf:"varint,4,opt,name=loginType" json:"loginType,omitempty"`
	Password  string `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	Token     string `protobuf:"bytes,6,opt,name=token" json:"token,omitempty"`
	SmsText   string `protobuf:"bytes,7,opt,name=smsText" json:"smsText,omitempty"`
}

func (m *UserRegister) Reset()                    { *m = UserRegister{} }
func (m *UserRegister) String() string            { return proto.CompactTextString(m) }
func (*UserRegister) ProtoMessage()               {}
func (*UserRegister) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *UserRegister) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *UserRegister) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserRegister) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *UserRegister) GetLoginType() int32 {
	if m != nil {
		return m.LoginType
	}
	return 0
}

func (m *UserRegister) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserRegister) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UserRegister) GetSmsText() string {
	if m != nil {
		return m.SmsText
	}
	return ""
}

func init() {
	proto.RegisterType((*UserRegister)(nil), "body.UserRegister")
	proto.RegisterEnum("body.UserRegister_TransferType", UserRegister_TransferType_name, UserRegister_TransferType_value)
}

func init() { proto.RegisterFile("user_register.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xdd, 0x4a, 0xc3, 0x30,
	0x1c, 0xc5, 0x4d, 0xbb, 0x76, 0xee, 0xcf, 0xc0, 0x90, 0x0d, 0x09, 0xe2, 0x45, 0xd9, 0x55, 0xaf,
	0xbc, 0xf1, 0x09, 0x74, 0x14, 0x15, 0xa4, 0xdd, 0x62, 0x8a, 0x1f, 0x37, 0xd2, 0xad, 0x71, 0xd6,
	0x8f, 0xa4, 0x24, 0x29, 0xba, 0x17, 0xf2, 0x39, 0xa5, 0xe9, 0x54, 0x8a, 0x77, 0xf9, 0x9d, 0x93,
	0xff, 0xe1, 0x70, 0x60, 0xd2, 0x18, 0xa1, 0x1f, 0xb5, 0xd8, 0x54, 0xc6, 0x0a, 0x7d, 0x52, 0x6b,
	0x65, 0x15, 0x19, 0xac, 0x54, 0xb9, 0x9d, 0x7d, 0x79, 0x30, 0xce, 0x8d, 0xd0, 0x6c, 0x67, 0x12,
	0x0a, 0xc3, 0x62, 0xbd, 0x56, 0x8d, 0xb4, 0x14, 0x45, 0x28, 0x1e, 0xb1, 0x1f, 0x24, 0x18, 0xfc,
	0xa6, 0x2a, 0xa9, 0x17, 0xa1, 0xd8, 0x67, 0xed, 0x93, 0x4c, 0x21, 0xa8, 0x9f, 0x95, 0x14, 0xd4,
	0x77, 0x3f, 0x3b, 0x20, 0xc7, 0x30, 0x7a, 0x53, 0x9b, 0x4a, 0xf2, 0x6d, 0x2d, 0xe8, 0x20, 0x42,
	0x71, 0xc0, 0xfe, 0x04, 0x72, 0x04, 0xfb, 0x75, 0x61, 0xcc, 0x87, 0xd2, 0x25, 0x0d, 0xdc, 0xd9,
	0x2f, 0xb7, 0x79, 0x56, 0xbd, 0x0a, 0x49, 0xc3, 0x2e, 0xcf, 0x41, 0xdb, 0xc8, 0xbc, 0x1b, 0x2e,
	0x3e, 0x2d, 0x1d, 0x76, 0x8d, 0x76, 0x38, 0x7b, 0x81, 0x31, 0xd7, 0x85, 0x34, 0x4f, 0x42, 0xbb,
	0x6c, 0x0a, 0xd3, 0xfc, 0x26, 0x61, 0xd7, 0xd9, 0xc5, 0x55, 0xca, 0xef, 0x17, 0xc9, 0xd9, 0x7c,
	0x9e, 0xe5, 0x29, 0xc7, 0x7b, 0xe4, 0x10, 0x48, 0xcf, 0x59, 0x5c, 0x66, 0x69, 0x82, 0x11, 0x99,
	0xc0, 0x41, 0x4f, 0x5f, 0x2e, 0xb1, 0xf7, 0x4f, 0xbc, 0xbd, 0xc3, 0xfe, 0x79, 0xf8, 0xe0, 0x06,
	0x5b, 0x85, 0x6e, 0xbd, 0xd3, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x31, 0x96, 0xaf, 0x09, 0x54,
	0x01, 0x00, 0x00,
}
